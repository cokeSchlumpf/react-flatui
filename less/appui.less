// --------------------------------------------------
// Import additional fonts.
// --------------------------------------------------
@import url(http://fonts.googleapis.com/css?family=Open+Sans:400,300,700,600);
@import url(http://fonts.googleapis.com/css?family=Cabin:400,700,600);

// --------------------------------------------------
// Reset CSS
// --------------------------------------------------
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after, 
q:before, q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

// --------------------------------------------------
// Flexbox LESS mixins
// The spec: http://www.w3.org/TR/css3-flexbox
// --------------------------------------------------
 
// Flexbox display
// flex or inline-flex
.flex-display(@display: flex) {
	display: ~"-webkit-@{display}";
	display: ~"-moz-@{display}";
	display: ~"-ms-@{display}box"; // IE10 uses -ms-flexbox
	display: ~"-ms-@{display}"; // IE11
	display: @display;
}
 
// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
.flex(@columns: initial) {
  -webkit-flex: @columns;
     -moz-flex: @columns;
      -ms-flex: @columns;
          flex: @columns;
}
 
// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
.flex-direction(@direction: row) {
  -webkit-flex-direction: @direction;
     -moz-flex-direction: @direction;
      -ms-flex-direction: @direction;
          flex-direction: @direction;
}
 
// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
.flex-wrap(@wrap: nowrap) {
  -webkit-flex-wrap: @wrap;
     -moz-flex-wrap: @wrap;
      -ms-flex-wrap: @wrap;
          flex-wrap: @wrap;
}
 
// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
.flex-flow(@flow) {
  -webkit-flex-flow: @flow;
     -moz-flex-flow: @flow;
      -ms-flex-flow: @flow;
          flex-flow: @flow;
}
 
// Display Order
// - applies to: flex items
// <integer>
.flex-order(@order: 0) {
  -webkit-order: @order;
     -moz-order: @order;
      -ms-order: @order;
          order: @order;
}
 
// Flex grow factor
// - applies to: flex items
// <number>
.flex-grow(@grow: 0) {
  -webkit-flex-grow: @grow;
     -moz-flex-grow: @grow;
      -ms-flex-grow: @grow;
          flex-grow: @grow;
}
 
// Flex shr
// - applies to: flex itemsink factor
// <number> 
.flex-shrink(@shrink: 1) {
  -webkit-flex-shrink: @shrink;
     -moz-flex-shrink: @shrink;
      -ms-flex-shrink: @shrink;
          flex-shrink: @shrink;
}
 
// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width> 
.flex-basis(@width: auto) {
  -webkit-flex-basis: @width;
     -moz-flex-basis: @width;
      -ms-flex-basis: @width;
          flex-basis: @width;
}
 
// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around 
.justify-content(@justify: flex-start) {
  -webkit-justify-content: @justify;
     -moz-justify-content: @justify;
      -ms-justify-content: @justify;
          justify-content: @justify;
}
 
// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch 
.align-content(@align: stretch) {
  -webkit-align-content: @align;
     -moz-align-content: @align;
      -ms-align-content: @align;
          align-content: @align;
}
 
// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch 
.align-items(@align: stretch) {
  -webkit-align-items: @align;
     -moz-align-items: @align;
      -ms-align-items: @align;
          align-items: @align;
}
 
// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch 
.align-self(@align: auto) {
  -webkit-align-self: @align;
     -moz-align-self: @align;
      -ms-align-self: @align;
          align-self: @align;
}

// Creates a fixed cell
.pbm-applayout-item-fixed(@num) {
    &.pbm-applayout-item-fixed-@{num} {
		  //.flex(@num 0 auto);
    .flex-grow(@num);
    .flex-shrink(0);
    .flex-basis(0);
    overflow: hidden;
    }
}

// --------------------------------------------------
// Flexbox based layout elements
// --------------------------------------------------
.pbm-applayout-item-fixed(1);
.pbm-applayout-item-fixed(2);
.pbm-applayout-item-fixed(3);
.pbm-applayout-item-fixed(4);
.pbm-applayout-item-fixed(5);
.pbm-applayout-item-fixed(6);
.pbm-applayout-item-fixed(7);
.pbm-applayout-item-fixed(8);
.pbm-applayout-item-fixed(9);
.pbm-applayout-item-fixed(10);

.pbm-application {
	width: 100%;
	height: 100%;
	margin: 0;
	padding: 0;
	
	overflow: hidden;
}

.pbm-applayout-none {
  position: relative;
}

.pbm-applayout-vertical {
	.flex-display;
	.flex-flow(column nowrap);
}

.pbm-applayout-horizontal {
	.flex-display;
	.flex-flow(row nowrap);
}

.pbm-applayout-justify-start { .justify-content(flex-start) }
.pbm-applayout-justify-end { .justify-content(flex-end) }
.pbm-applayout-justify-center { .justify-content(center) }
.pbm-applayout-justify-space-between { .justify-content(space-between) }
.pbm-applayout-justify-space-around { .justify-content(space-around) }

.pbm-applayout-alignitems-start { .align-items(@align: flex-start) }
.pbm-applayout-alignitems-end { .align-items(@align: flex-end) }
.pbm-applayout-alignitems-center { .align-items(@align: center) }
.pbm-applayout-alignitems-stretch { .align-items(@align: stretch) }
.pbm-applayout-alignitems-baseline { .align-items(@align: baseline) }

.pbm-applayout-scroll {
  overflow-y: auto;
}

// --------------------------------------------------
// Basic Styles
// --------------------------------------------------

@colorBase: #fff;
@colorBaseText: #333;
@colorBaseLight: #ddd;
@colorBaseHeavy: #999;
@colorMain: #8e44ad;
@colorMainLight: #9b59b6;
@colorMainText: #fff;
@colorSecondary: #2c3e50;
@colorSecondaryLight: #34495e;
@colorSecondaryText: #fff;

.small() {
  font: 10pt "Open Sans", sans-serif;
}

.default() {
  font: 12pt "Open Sans", sans-serif;
}

.base() {
  background-color: @colorBase;
  color: @colorBaseText;
}

.main() {
  background-color: @colorMain;
  color: @colorMainText;
}

.secondary() {
  background-color: @colorSecondary;
  color: @colorSecondaryText; 
}

html, body {
  width: 100%;
  height: 100px;
  
  color: @colorBaseText;
  background-color: @colorBase;
  .default();
}

// --------------------------------------------------
// Control elements Styles
// --------------------------------------------------

@controlBorder: 2px solid @colorBaseLight;

// --- Basics
.ui-control-small {
  .small();
  color: @colorBaseHeavy;
}

.ui-control-info {
  .small();
  color: @colorMainLight;
}

.selected() {
  .main();
  
  .ui-control-small {
    color: @colorMainText !important;
  }
  
  .ui-control-info {
    color: @colorMainText !important;
  }
}

.selectableHover() {
  background-color: @colorBaseLight;
}

// --- Titlebar
.pbm-titlebar {
  .small();
  .secondary();
  padding: 5px 10px;
}

// --- Toolbar
.pbm-toolbar {
  .main();
  padding: 10px;
}

// --- Input Fields
.pbm-control {
  
  label {
    line-height: 27px; // We add 2 Pixels because of the border of the textfields.
  }
  
  input[type="text"],
  input[type="email"],
  input[type="password"] {
    .default();
    
    line-height: 25px;
    border: 1px solid @colorBaseLight;
    padding: 0 5px;
  }
  
  input[type="text"]:focus,
  input[type="email"]:focus,
  input[type="password"]:focus {
    border-color: @colorMainLight;
  }
  
}

.pbm-applayout-vertical > .pbm-control {
  margin-bottom: 20px;
}





// --- Textbox
.ui-control-textbox {
  .default();
  
  line-height: 25px;
  border: @controlBorder;
  padding: 3px;
}

.ui-control-textbox-container {
  border: @controlBorder;
  
  .ui-control-textbox {
    border: none;
  }
}

.ui-control-textbox:focus,
.ui-control-textbox-container-focused {
  border-color: @colorMainLight;
}

// --- Checkbox & Radiobox
.ui-control-checkbox,
.ui-control-radio {
  input[type="checkbox"],
  input[type="radio"] {
    display:none;
  }
  
  label {
    display: inline-block;
    padding-left: 25px;
    position: relative;
  }
  
  input + label span.ui-control-display-element {
    display:inline-block;
    position: absolute;
    top: 3px;
    left: 0px;
    width:17px;
    height:16px;
    background: @colorBase;
    border: @controlBorder;
  }
  
  input[type="radio"] + label span.ui-control-display-element {
    border-radius: 10px;
  }
  
  input + label:hover:after,
  input:checked + label:after {
    position: absolute;
    left: 6px;
    content: "x";
    font-weight: bold;
    color: @colorBaseLight;
  }
  
  input[type="radio"] + label:hover:after,
  input[type="radio"]:checked + label:after {
    content: "\2022";
    font-size: 200%;
    top: -1px;
    left: 1px;
    font-family: monospace;
  }
  
  input:checked + label:after {
    color: @colorMain;
  }
  
  span {
    line-height: 25px;
  }
}

// --- Button
.ui-control-button {
  .default();
  line-height: 25px;
  padding: 3px;
  
  border: 2px solid @colorBaseLight;
  background-color: @colorBase;
}

.ui-control-button:hover {
  background-color: @colorBaseLight; 
}

.ui-control-button[type="submit"] {
  border-color: @colorMain;
  background-color: @colorMainLight;
  color: @colorMainText;  
}

.ui-control-button[type="submit"]:hover {
  background-color: @colorMain;
}

// --- Listbox
.ui-control-listbox {
  height: 150px;
  overflow-y: auto;
  display: inline-block;
  min-width: 300px;
  border: @controlBorder;
  background-color: @colorBase;
  
  .ui-control-listitem {
    line-height: 25px;
    padding: 3px 8px 3px 8px;
    cursor: default;
  }
}

.ui-control-listbox.ui-control-selectable .ui-control-listitem:hover {
  .selectableHover();
}

.ui-control-listbox.ui-control-selectable .ui-control-listitem.ui-control-selected,
.ui-control-listbox.ui-control-selectable .ui-control-listitem.ui-control-selected:hover {
  .selected();
}

.ui-control-listitem-complex {
  border-bottom: 1px solid @colorBaseLight; 
} 

.ui-control-listitem-complex:last-child {
  border: none;
}

// --- Combobox
.ui-control-combobox {
  .ui-control-button {
    border: none;
  }
  
  .ui-control-listbox {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;  
    z-index: 100;
    border-top: none;
  }
  
  overflow-y: show;
  
  .ui-control-combobox-item {
    line-height: 25px;
    display: inline-block;
    margin: 3px;    
  }
}